# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

 
trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '02747747-9b9d-4bfc-b29e-1ed18174289a'
    definition: '4'
    buildVersionToDownload: 'latest'
    targetPath: '$(Pipeline.Workspace)'
    
    
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure Connection'
    subscriptionId: 'd72b4c9a-8251-487d-bb72-602bd56622f9'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(resourcegroup)'
    location: 'South India'
    templateLocation: 'Linked artifact'
    csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
    csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
    overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
    deploymentMode: 'Incremental'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure Connection'
        appType: 'webApp'
        WebAppName: '$(web_prefix)-$(web_site)-$(web_environment)'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

resources:
 pipelines:
  - pipeline: buildContosoAir # identifier for the resource used in pipeline resource variables
    source: Student1-29226802.ContosoAir # name of the pipeline that produces the artifact
    trigger:
     branches:
      include:
       - master